[==========] Running 21 benchmarks.
[ RUN      ] vanEB5InsertionFixture.vanEB5 (20 runs, 5 iterations per run)
[     DONE ] vanEB5InsertionFixture.vanEB5 (181.720710 ms)
[   RUNS   ]        Average time: 6057.357 us (~382.801 us)
                    Fastest time: 5863.457 us (-193.900 us / -3.201 %)
                    Slowest time: 7570.981 us (+1513.624 us / +24.988 %)
                     Median time: 5922.769 us (1st quartile: 5909.303 us | 3rd quartile: 5961.241 us)

             Average performance: 165.08850 runs/s
                Best performance: 170.54785 runs/s (+5.45935 runs/s / +3.30692 %)
               Worst performance: 132.08328 runs/s (-33.00522 runs/s / -19.99244 %)
              Median performance: 168.83996 runs/s (1st quartile: 169.22470 | 3rd quartile: 167.75031)

[ITERATIONS]        Average time: 6057.357 us (~382.801 us)
                    Fastest time: 5863.457 us (-193.900 us / -3.201 %)
                    Slowest time: 7570.981 us (+1513.624 us / +24.988 %)
                     Median time: 5922.769 us (1st quartile: 5909.303 us | 3rd quartile: 5961.241 us)

             Average performance: 165.08850 iterations/s
                Best performance: 170.54785 iterations/s (+5.45935 iterations/s / +3.30692 %)
               Worst performance: 132.08328 iterations/s (-33.00522 iterations/s / -19.99244 %)
              Median performance: 168.83996 iterations/s (1st quartile: 169.22470 | 3rd quartile: 167.75031)
[ RUN      ] vanEB5GetWarpFixture.GetWarpvanEB5 (20 runs, 5 iterations per run)
[     DONE ] vanEB5GetWarpFixture.GetWarpvanEB5 (81.314856 ms)
[   RUNS   ]        Average time: 4065.743 us (~162.030 us)
                    Fastest time: 3873.478 us (-192.265 us / -4.729 %)
                    Slowest time: 4545.459 us (+479.716 us / +11.799 %)
                     Median time: 4059.106 us (1st quartile: 3952.667 us | 3rd quartile: 4107.838 us)

             Average performance: 245.95752 runs/s
                Best performance: 258.16592 runs/s (+12.20840 runs/s / +4.96362 %)
               Worst performance: 219.99978 runs/s (-25.95773 runs/s / -10.55375 %)
              Median performance: 246.35964 runs/s (1st quartile: 252.99374 | 3rd quartile: 243.43706)

[ITERATIONS]        Average time: 813.149 us (~32.406 us)
                    Fastest time: 774.696 us (-38.453 us / -4.729 %)
                    Slowest time: 909.092 us (+95.943 us / +11.799 %)
                     Median time: 811.821 us (1st quartile: 790.533 us | 3rd quartile: 821.568 us)

             Average performance: 1229.78758 iterations/s
                Best performance: 1290.82959 iterations/s (+61.04200 iterations/s / +4.96362 %)
               Worst performance: 1099.99892 iterations/s (-129.78866 iterations/s / -10.55375 %)
              Median performance: 1231.79818 iterations/s (1st quartile: 1264.96869 | 3rd quartile: 1217.18529)
[ RUN      ] vanEB5PredecessorFixture.PredecessorvanEB5 (20 runs, 5 iterations per run)
[     DONE ] vanEB5PredecessorFixture.PredecessorvanEB5 (393.597489 ms)
[   RUNS   ]        Average time: 19679.874 us (~148.620 us)
                    Fastest time: 19429.068 us (-250.806 us / -1.274 %)
                    Slowest time: 19995.891 us (+316.017 us / +1.606 %)
                     Median time: 19646.596 us (1st quartile: 19580.392 us | 3rd quartile: 19794.874 us)

             Average performance: 50.81333 runs/s
                Best performance: 51.46927 runs/s (+0.65594 runs/s / +1.29088 %)
               Worst performance: 50.01027 runs/s (-0.80306 runs/s / -1.58041 %)
              Median performance: 50.89940 runs/s (1st quartile: 51.07150 | 3rd quartile: 50.51813)

[ITERATIONS]        Average time: 3935.975 us (~29.724 us)
                    Fastest time: 3885.814 us (-50.161 us / -1.274 %)
                    Slowest time: 3999.178 us (+63.203 us / +1.606 %)
                     Median time: 3929.319 us (1st quartile: 3916.078 us | 3rd quartile: 3958.975 us)

             Average performance: 254.06666 iterations/s
                Best performance: 257.34636 iterations/s (+3.27970 iterations/s / +1.29088 %)
               Worst performance: 250.05137 iterations/s (-4.01529 iterations/s / -1.58041 %)
              Median performance: 254.49701 iterations/s (1st quartile: 255.35750 | 3rd quartile: 252.59065)
[ RUN      ] vanEB6InsertionFixture.vanEB6 (20 runs, 5 iterations per run)
[     DONE ] vanEB6InsertionFixture.vanEB6 (162.294177 ms)
[   RUNS   ]        Average time: 5409.806 us (~31.527 us)
                    Fastest time: 5352.739 us (-57.067 us / -1.055 %)
                    Slowest time: 5517.207 us (+107.401 us / +1.985 %)
                     Median time: 5408.042 us (1st quartile: 5396.020 us | 3rd quartile: 5425.515 us)

             Average performance: 184.84952 runs/s
                Best performance: 186.82024 runs/s (+1.97073 runs/s / +1.06613 %)
               Worst performance: 181.25113 runs/s (-3.59839 runs/s / -1.94666 %)
              Median performance: 184.90979 runs/s (1st quartile: 185.32177 | 3rd quartile: 184.31430)

[ITERATIONS]        Average time: 5409.806 us (~31.527 us)
                    Fastest time: 5352.739 us (-57.067 us / -1.055 %)
                    Slowest time: 5517.207 us (+107.401 us / +1.985 %)
                     Median time: 5408.042 us (1st quartile: 5396.020 us | 3rd quartile: 5425.515 us)

             Average performance: 184.84952 iterations/s
                Best performance: 186.82024 iterations/s (+1.97073 iterations/s / +1.06613 %)
               Worst performance: 181.25113 iterations/s (-3.59839 iterations/s / -1.94666 %)
              Median performance: 184.90979 iterations/s (1st quartile: 185.32177 | 3rd quartile: 184.31430)
[ RUN      ] vanEB6GetWarpFixture.GetWarpvanEB6 (20 runs, 5 iterations per run)
[     DONE ] vanEB6GetWarpFixture.GetWarpvanEB6 (79.747435 ms)
[   RUNS   ]        Average time: 3987.372 us (~60.538 us)
                    Fastest time: 3902.012 us (-85.360 us / -2.141 %)
                    Slowest time: 4092.128 us (+104.756 us / +2.627 %)
                     Median time: 3989.055 us (1st quartile: 3933.431 us | 3rd quartile: 4043.397 us)

             Average performance: 250.79177 runs/s
                Best performance: 256.27804 runs/s (+5.48628 runs/s / +2.18758 %)
               Worst performance: 244.37163 runs/s (-6.42013 runs/s / -2.55995 %)
              Median performance: 250.68597 runs/s (1st quartile: 254.23098 | 3rd quartile: 247.31680)

[ITERATIONS]        Average time: 797.474 us (~12.108 us)
                    Fastest time: 780.402 us (-17.072 us / -2.141 %)
                    Slowest time: 818.426 us (+20.951 us / +2.627 %)
                     Median time: 797.811 us (1st quartile: 786.686 us | 3rd quartile: 808.679 us)

             Average performance: 1253.95883 iterations/s
                Best performance: 1281.39022 iterations/s (+27.43139 iterations/s / +2.18758 %)
               Worst performance: 1221.85816 iterations/s (-32.10066 iterations/s / -2.55995 %)
              Median performance: 1253.42985 iterations/s (1st quartile: 1271.15488 | 3rd quartile: 1236.58399)
[ RUN      ] vanEB6PredecessorFixture.PredecessorvanEB6 (20 runs, 5 iterations per run)
[     DONE ] vanEB6PredecessorFixture.PredecessorvanEB6 (352.864733 ms)
[   RUNS   ]        Average time: 17643.237 us (~113.928 us)
                    Fastest time: 17470.513 us (-172.724 us / -0.979 %)
                    Slowest time: 17854.593 us (+211.356 us / +1.198 %)
                     Median time: 17650.210 us (1st quartile: 17532.709 us | 3rd quartile: 17730.521 us)

             Average performance: 56.67894 runs/s
                Best performance: 57.23930 runs/s (+0.56036 runs/s / +0.98866 %)
               Worst performance: 56.00800 runs/s (-0.67095 runs/s / -1.18376 %)
              Median performance: 56.65655 runs/s (1st quartile: 57.03625 | 3rd quartile: 56.39992)

[ITERATIONS]        Average time: 3528.647 us (~22.786 us)
                    Fastest time: 3494.103 us (-34.545 us / -0.979 %)
                    Slowest time: 3570.919 us (+42.271 us / +1.198 %)
                     Median time: 3530.042 us (1st quartile: 3506.542 us | 3rd quartile: 3546.104 us)

             Average performance: 283.39471 iterations/s
                Best performance: 286.19652 iterations/s (+2.80180 iterations/s / +0.98866 %)
               Worst performance: 280.03999 iterations/s (-3.35473 iterations/s / -1.18376 %)
              Median performance: 283.28275 iterations/s (1st quartile: 285.18126 | 3rd quartile: 281.99961)
[ RUN      ] LSMInsertionFixture.LSM (20 runs, 5 iterations per run)
[     DONE ] LSMInsertionFixture.LSM (201.006181 ms)
[   RUNS   ]        Average time: 6700.206 us (~18.495 us)
                    Fastest time: 6672.014 us (-28.192 us / -0.421 %)
                    Slowest time: 6750.241 us (+50.035 us / +0.747 %)
                     Median time: 6696.380 us (1st quartile: 6685.480 us | 3rd quartile: 6714.975 us)

             Average performance: 149.24914 runs/s
                Best performance: 149.87978 runs/s (+0.63064 runs/s / +0.42254 %)
               Worst performance: 148.14286 runs/s (-1.10628 runs/s / -0.74123 %)
              Median performance: 149.33442 runs/s (1st quartile: 149.57789 | 3rd quartile: 148.92088)

[ITERATIONS]        Average time: 6700.206 us (~18.495 us)
                    Fastest time: 6672.014 us (-28.192 us / -0.421 %)
                    Slowest time: 6750.241 us (+50.035 us / +0.747 %)
                     Median time: 6696.380 us (1st quartile: 6685.480 us | 3rd quartile: 6714.975 us)

             Average performance: 149.24914 iterations/s
                Best performance: 149.87978 iterations/s (+0.63064 iterations/s / +0.42254 %)
               Worst performance: 148.14286 iterations/s (-1.10628 iterations/s / -0.74123 %)
              Median performance: 149.33442 iterations/s (1st quartile: 149.57789 | 3rd quartile: 148.92088)
[ RUN      ] LSMGetThreadFixture.GetThreadLSM (20 runs, 5 iterations per run)
[     DONE ] LSMGetThreadFixture.GetThreadLSM (28.971174 ms)
[   RUNS   ]        Average time: 1448.559 us (~75.079 us)
                    Fastest time: 1358.999 us (-89.560 us / -6.183 %)
                    Slowest time: 1593.358 us (+144.799 us / +9.996 %)
                     Median time: 1449.729 us (1st quartile: 1381.120 us | 3rd quartile: 1513.849 us)

             Average performance: 690.34137 runs/s
                Best performance: 735.83571 runs/s (+45.49434 runs/s / +6.59012 %)
               Worst performance: 627.60535 runs/s (-62.73603 runs/s / -9.08768 %)
              Median performance: 689.78409 runs/s (1st quartile: 724.05005 | 3rd quartile: 660.56786)

[ITERATIONS]        Average time: 289.712 us (~15.016 us)
                    Fastest time: 271.800 us (-17.912 us / -6.183 %)
                    Slowest time: 318.672 us (+28.960 us / +9.996 %)
                     Median time: 289.946 us (1st quartile: 276.224 us | 3rd quartile: 302.770 us)

             Average performance: 3451.70686 iterations/s
                Best performance: 3679.17857 iterations/s (+227.47171 iterations/s / +6.59012 %)
               Worst performance: 3138.02673 iterations/s (-313.68013 iterations/s / -9.08768 %)
              Median performance: 3448.92045 iterations/s (1st quartile: 3620.25023 | 3rd quartile: 3302.83932)
[ RUN      ] LSMGetWorstThreadFixture.GetWorstThreadLSM (20 runs, 5 iterations per run)
[     DONE ] LSMGetWorstThreadFixture.GetWorstThreadLSM (81.170565 ms)
[   RUNS   ]        Average time: 4058.528 us (~900.482 us)
                    Fastest time: 1399.074 us (-2659.454 us / -65.528 %)
                    Slowest time: 4699.347 us (+640.819 us / +15.789 %)
                     Median time: 4311.419 us (1st quartile: 4279.679 us | 3rd quartile: 4361.753 us)

             Average performance: 246.39474 runs/s
                Best performance: 714.75848 runs/s (+468.36374 runs/s / +190.08675 %)
               Worst performance: 212.79552 runs/s (-33.59921 runs/s / -13.63634 %)
              Median performance: 231.94220 runs/s (1st quartile: 233.66238 | 3rd quartile: 229.26562)

[ITERATIONS]        Average time: 811.706 us (~180.096 us)
                    Fastest time: 279.815 us (-531.891 us / -65.528 %)
                    Slowest time: 939.869 us (+128.164 us / +15.789 %)
                     Median time: 862.284 us (1st quartile: 855.936 us | 3rd quartile: 872.351 us)

             Average performance: 1231.97368 iterations/s
                Best performance: 3573.79238 iterations/s (+2341.81870 iterations/s / +190.08675 %)
               Worst performance: 1063.97761 iterations/s (-167.99607 iterations/s / -13.63634 %)
              Median performance: 1159.71099 iterations/s (1st quartile: 1168.31192 | 3rd quartile: 1146.32809)
[ RUN      ] LSMGetWarpFixture.GetWarpLSM (20 runs, 5 iterations per run)
[     DONE ] LSMGetWarpFixture.GetWarpLSM (304.768063 ms)
[   RUNS   ]        Average time: 15238.403 us (~145.483 us)
                    Fastest time: 14947.698 us (-290.705 us / -1.908 %)
                    Slowest time: 15476.370 us (+237.967 us / +1.562 %)
                     Median time: 15226.621 us (1st quartile: 15145.829 us | 3rd quartile: 15376.983 us)

             Average performance: 65.62367 runs/s
                Best performance: 66.89993 runs/s (+1.27626 runs/s / +1.94482 %)
               Worst performance: 64.61464 runs/s (-1.00904 runs/s / -1.53761 %)
              Median performance: 65.67445 runs/s (1st quartile: 66.02478 | 3rd quartile: 65.03226)

[ITERATIONS]        Average time: 3047.681 us (~29.097 us)
                    Fastest time: 2989.540 us (-58.141 us / -1.908 %)
                    Slowest time: 3095.274 us (+47.593 us / +1.562 %)
                     Median time: 3045.324 us (1st quartile: 3029.166 us | 3rd quartile: 3075.397 us)

             Average performance: 328.11837 iterations/s
                Best performance: 334.49967 iterations/s (+6.38130 iterations/s / +1.94482 %)
               Worst performance: 323.07318 iterations/s (-5.04519 iterations/s / -1.53761 %)
              Median performance: 328.37226 iterations/s (1st quartile: 330.12389 | 3rd quartile: 325.16131)
[ RUN      ] LSMGetWorstWarpFixture.GetWorstWarpLSM (20 runs, 5 iterations per run)
[     DONE ] LSMGetWorstWarpFixture.GetWorstWarpLSM (1139.631306 ms)
[   RUNS   ]        Average time: 56981.565 us (~10114.716 us)
                    Fastest time: 14011.220 us (-42970.345 us / -75.411 %)
                    Slowest time: 59447.200 us (+2465.635 us / +4.327 %)
                     Median time: 59216.527 us (1st quartile: 59174.689 us | 3rd quartile: 59257.404 us)

             Average performance: 17.54954 runs/s
                Best performance: 71.37137 runs/s (+53.82184 runs/s / +306.68525 %)
               Worst performance: 16.82165 runs/s (-0.72789 runs/s / -4.14760 %)
              Median performance: 16.88718 runs/s (1st quartile: 16.89912 | 3rd quartile: 16.87553)

[ITERATIONS]        Average time: 11396.313 us (~112.943 us)
                    Fastest time: 10802.244 us (-8594.069 us / -75.411 %)
                    Slowest time: 11889.440 us (+493.127 us / +4.327 %)
                     Median time: 11843.305 us (1st quartile: 11834.938 us | 3rd quartile: 11851.481 us)

             Average performance: 87.74768 iterations/s
                Best performance: 356.85686 iterations/s (+269.10918 iterations/s / +306.68525 %)
               Worst performance: 84.10825 iterations/s (-3.63943 iterations/s / -4.14760 %)
              Median performance: 84.43589 iterations/s (1st quartile: 84.49559 | 3rd quartile: 84.37764)
[ RUN      ] LSMPredecessorWarpFixture.PredecessorWarpLSM (20 runs, 5 iterations per run)
[     DONE ] LSMPredecessorWarpFixture.PredecessorWarpLSM (308.817581 ms)
[   RUNS   ]        Average time: 15440.879 us (~213.390 us)
                    Fastest time: 15038.428 us (-402.451 us / -2.606 %)
                    Slowest time: 15887.060 us (+446.181 us / +2.890 %)
                     Median time: 15437.737 us (1st quartile: 15308.374 us | 3rd quartile: 15576.077 us)

             Average performance: 64.76315 runs/s
                Best performance: 66.49631 runs/s (+1.73316 runs/s / +2.67615 %)
               Worst performance: 62.94431 runs/s (-1.81884 runs/s / -2.80846 %)
              Median performance: 64.77633 runs/s (1st quartile: 65.32372 | 3rd quartile: 64.20102)

[ITERATIONS]        Average time: 3088.176 us (~42.678 us)
                    Fastest time: 3007.686 us (-80.490 us / -2.606 %)
                    Slowest time: 3177.412 us (+89.236 us / +2.890 %)
                     Median time: 3087.547 us (1st quartile: 3061.675 us | 3rd quartile: 3115.215 us)

             Average performance: 323.81576 iterations/s
                Best performance: 332.48156 iterations/s (+8.66580 iterations/s / +2.67615 %)
               Worst performance: 314.72154 iterations/s (-9.09422 iterations/s / -2.80846 %)
              Median performance: 323.88167 iterations/s (1st quartile: 326.61862 | 3rd quartile: 321.00509)
[ RUN      ] LSMPredecessorWorstWarpFixture.PredecessorWorstWarpLSM (20 runs, 5 iterations per run)
[     DONE ] LSMPredecessorWorstWarpFixture.PredecessorWorstWarpLSM (1460.483619 ms)
[   RUNS   ]        Average time: 73024.181 us (~128.115 us)
                    Fastest time: 72737.419 us (-286.762 us / -0.393 %)
                    Slowest time: 73226.657 us (+202.476 us / +0.277 %)
                     Median time: 73044.875 us (1st quartile: 72973.061 us | 3rd quartile: 73133.041 us)

             Average performance: 13.69409 runs/s
                Best performance: 13.74808 runs/s (+0.05399 runs/s / +0.39424 %)
               Worst performance: 13.65623 runs/s (-0.03786 runs/s / -0.27651 %)
              Median performance: 13.69021 runs/s (1st quartile: 13.70369 | 3rd quartile: 13.67371)

[ITERATIONS]        Average time: 14604.836 us (~25.623 us)
                    Fastest time: 14547.484 us (-57.352 us / -0.393 %)
                    Slowest time: 14645.331 us (+40.495 us / +0.277 %)
                     Median time: 14608.975 us (1st quartile: 14594.612 us | 3rd quartile: 14626.608 us)

             Average performance: 68.47047 iterations/s
                Best performance: 68.74041 iterations/s (+0.26994 iterations/s / +0.39424 %)
               Worst performance: 68.28115 iterations/s (-0.18932 iterations/s / -0.27651 %)
              Median performance: 68.45107 iterations/s (1st quartile: 68.51844 | 3rd quartile: 68.36855)
[ RUN      ] BTreeInsertionFixture.InsertionBtree (20 runs, 5 iterations per run)
[     DONE ] BTreeInsertionFixture.InsertionBtree (66509.889308 ms)
[   RUNS   ]        Average time: 3325494.465 us (~7508.148 us)
                    Fastest time: 3310733.455 us (-14761.010 us / -0.444 %)
                    Slowest time: 3338715.242 us (+13220.777 us / +0.398 %)
                     Median time: 3325871.782 us (1st quartile: 3320155.936 us | 3rd quartile: 3332393.299 us)

             Average performance: 0.30071 runs/s
                Best performance: 0.30205 runs/s (+0.00134 runs/s / +0.44585 %)
               Worst performance: 0.29952 runs/s (-0.00119 runs/s / -0.39598 %)
              Median performance: 0.30067 runs/s (1st quartile: 0.30119 | 3rd quartile: 0.30008)

[ITERATIONS]        Average time: 665098.893 us (~1501.630 us)
                    Fastest time: 662146.691 us (-2952.202 us / -0.444 %)
                    Slowest time: 667743.048 us (+2644.155 us / +0.398 %)
                     Median time: 665174.356 us (1st quartile: 664031.187 us | 3rd quartile: 666478.660 us)

             Average performance: 1.50354 iterations/s
                Best performance: 1.51024 iterations/s (+0.00670 iterations/s / +0.44585 %)
               Worst performance: 1.49758 iterations/s (-0.00595 iterations/s / -0.39598 %)
              Median performance: 1.50337 iterations/s (1st quartile: 1.50595 | 3rd quartile: 1.50042)
[ RUN      ] BTreeGetThreadFixture.GetThreadBtree (20 runs, 5 iterations per run)
[     DONE ] BTreeGetThreadFixture.GetThreadBtree (88.583536 ms)
[   RUNS   ]        Average time: 4429.177 us (~266.761 us)
                    Fastest time: 4115.212 us (-313.965 us / -7.089 %)
                    Slowest time: 5352.734 us (+923.557 us / +20.852 %)
                     Median time: 4393.494 us (1st quartile: 4292.825 us | 3rd quartile: 4503.140 us)

             Average performance: 225.77559 runs/s
                Best performance: 243.00085 runs/s (+17.22526 runs/s / +7.62937 %)
               Worst performance: 186.82042 runs/s (-38.95517 runs/s / -17.25393 %)
              Median performance: 227.60928 runs/s (1st quartile: 232.94684 | 3rd quartile: 222.06727)

[ITERATIONS]        Average time: 885.835 us (~53.352 us)
                    Fastest time: 823.042 us (-62.793 us / -7.089 %)
                    Slowest time: 1070.547 us (+184.711 us / +20.852 %)
                     Median time: 878.699 us (1st quartile: 858.565 us | 3rd quartile: 900.628 us)

             Average performance: 1128.87794 iterations/s
                Best performance: 1215.00423 iterations/s (+86.12629 iterations/s / +7.62937 %)
               Worst performance: 934.10209 iterations/s (-194.77586 iterations/s / -17.25393 %)
              Median performance: 1138.04639 iterations/s (1st quartile: 1164.73418 | 3rd quartile: 1110.33634)
[ RUN      ] BTreeGetWarpFixture.GetWarpBtree (20 runs, 5 iterations per run)
[     DONE ] BTreeGetWarpFixture.GetWarpBtree (314.439028 ms)
[   RUNS   ]        Average time: 15721.951 us (~168.720 us)
                    Fastest time: 15438.219 us (-283.732 us / -1.805 %)
                    Slowest time: 16030.370 us (+308.419 us / +1.962 %)
                     Median time: 15712.173 us (1st quartile: 15595.634 us | 3rd quartile: 15865.581 us)

             Average performance: 63.60534 runs/s
                Best performance: 64.77431 runs/s (+1.16898 runs/s / +1.83786 %)
               Worst performance: 62.38159 runs/s (-1.22374 runs/s / -1.92396 %)
              Median performance: 63.64492 runs/s (1st quartile: 64.12051 | 3rd quartile: 63.02952)

[ITERATIONS]        Average time: 3144.390 us (~33.744 us)
                    Fastest time: 3087.644 us (-56.746 us / -1.805 %)
                    Slowest time: 3206.074 us (+61.684 us / +1.962 %)
                     Median time: 3142.435 us (1st quartile: 3119.127 us | 3rd quartile: 3173.116 us)

             Average performance: 318.02668 iterations/s
                Best performance: 323.87156 iterations/s (+5.84488 iterations/s / +1.83786 %)
               Worst performance: 311.90796 iterations/s (-6.11872 iterations/s / -1.92396 %)
              Median performance: 318.22460 iterations/s (1st quartile: 320.60255 | 3rd quartile: 315.14761)
[ RUN      ] BTreePredecessorFixture.PredecessorBtree (20 runs, 5 iterations per run)
[     DONE ] BTreePredecessorFixture.PredecessorBtree (498.399907 ms)
[   RUNS   ]        Average time: 24919.995 us (~187.817 us)
                    Fastest time: 24635.317 us (-284.678 us / -1.142 %)
                    Slowest time: 25254.078 us (+334.083 us / +1.341 %)
                     Median time: 24888.432 us (1st quartile: 24803.312 us | 3rd quartile: 25051.779 us)

             Average performance: 40.12842 runs/s
                Best performance: 40.59213 runs/s (+0.46371 runs/s / +1.15557 %)
               Worst performance: 39.59757 runs/s (-0.53085 runs/s / -1.32289 %)
              Median performance: 40.17931 runs/s (1st quartile: 40.31720 | 3rd quartile: 39.91732)

[ITERATIONS]        Average time: 4983.999 us (~37.563 us)
                    Fastest time: 4927.063 us (-56.936 us / -1.142 %)
                    Slowest time: 5050.816 us (+66.817 us / +1.341 %)
                     Median time: 4977.686 us (1st quartile: 4960.662 us | 3rd quartile: 5010.356 us)

             Average performance: 200.64209 iterations/s
                Best performance: 202.96065 iterations/s (+2.31856 iterations/s / +1.15557 %)
               Worst performance: 197.98783 iterations/s (-2.65427 iterations/s / -1.32289 %)
              Median performance: 200.89655 iterations/s (1st quartile: 201.58598 | 3rd quartile: 199.58662)
[ RUN      ] Group3InsertionFixture.Group3 (20 runs, 5 iterations per run)
[     DONE ] Group3InsertionFixture.Group3 (1218.832941 ms)
[   RUNS   ]        Average time: 40627.765 us (~416.749 us)
                    Fastest time: 40250.865 us (-376.900 us / -0.928 %)
                    Slowest time: 41702.550 us (+1074.785 us / +2.645 %)
                     Median time: 40452.844 us (1st quartile: 40399.304 us | 3rd quartile: 40664.442 us)

             Average performance: 24.61371 runs/s
                Best performance: 24.84419 runs/s (+0.23048 runs/s / +0.93638 %)
               Worst performance: 23.97935 runs/s (-0.63436 runs/s / -2.57727 %)
              Median performance: 24.72014 runs/s (1st quartile: 24.75290 | 3rd quartile: 24.59151)

[ITERATIONS]        Average time: 40627.765 us (~416.749 us)
                    Fastest time: 40250.865 us (-376.900 us / -0.928 %)
                    Slowest time: 41702.550 us (+1074.785 us / +2.645 %)
                     Median time: 40452.844 us (1st quartile: 40399.304 us | 3rd quartile: 40664.442 us)

             Average performance: 24.61371 iterations/s
                Best performance: 24.84419 iterations/s (+0.23048 iterations/s / +0.93638 %)
               Worst performance: 23.97935 iterations/s (-0.63436 iterations/s / -2.57727 %)
              Median performance: 24.72014 iterations/s (1st quartile: 24.75290 | 3rd quartile: 24.59151)
[ RUN      ] Group3PredecessorFixture.PredecessorGroup3 (20 runs, 5 iterations per run)
[     DONE ] Group3PredecessorFixture.PredecessorGroup3 (826.625740 ms)
[   RUNS   ]        Average time: 41331.287 us (~170.466 us)
                    Fastest time: 41060.379 us (-270.908 us / -0.655 %)
                    Slowest time: 41669.842 us (+338.555 us / +0.819 %)
                     Median time: 41362.866 us (1st quartile: 41201.764 us | 3rd quartile: 41450.551 us)

             Average performance: 24.19475 runs/s
                Best performance: 24.35438 runs/s (+0.15963 runs/s / +0.65978 %)
               Worst performance: 23.99817 runs/s (-0.19658 runs/s / -0.81247 %)
              Median performance: 24.17627 runs/s (1st quartile: 24.27081 | 3rd quartile: 24.12513)

[ITERATIONS]        Average time: 8266.257 us (~34.093 us)
                    Fastest time: 8212.076 us (-54.182 us / -0.655 %)
                    Slowest time: 8333.968 us (+67.711 us / +0.819 %)
                     Median time: 8272.573 us (1st quartile: 8240.353 us | 3rd quartile: 8290.110 us)

             Average performance: 120.97373 iterations/s
                Best performance: 121.77189 iterations/s (+0.79816 iterations/s / +0.65978 %)
               Worst performance: 119.99086 iterations/s (-0.98288 iterations/s / -0.81247 %)
              Median performance: 120.88137 iterations/s (1st quartile: 121.35403 | 3rd quartile: 120.62566)
[ RUN      ] Group1InsertionFixture.Group1 (20 runs, 5 iterations per run)
[     DONE ] Group1InsertionFixture.Group1 (668.275032 ms)
[   RUNS   ]        Average time: 22275.834 us (~937.761 us)
                    Fastest time: 21344.668 us (-931.166 us / -4.180 %)
                    Slowest time: 25737.872 us (+3462.038 us / +15.542 %)
                     Median time: 21915.981 us (1st quartile: 21849.295 us | 3rd quartile: 22090.388 us)

             Average performance: 44.89170 runs/s
                Best performance: 46.85011 runs/s (+1.95841 runs/s / +4.36252 %)
               Worst performance: 38.85325 runs/s (-6.03845 runs/s / -13.45114 %)
              Median performance: 45.62880 runs/s (1st quartile: 45.76807 | 3rd quartile: 45.26856)

[ITERATIONS]        Average time: 22275.834 us (~937.761 us)
                    Fastest time: 21344.668 us (-931.166 us / -4.180 %)
                    Slowest time: 25737.872 us (+3462.038 us / +15.542 %)
                     Median time: 21915.981 us (1st quartile: 21849.295 us | 3rd quartile: 22090.388 us)

             Average performance: 44.89170 iterations/s
                Best performance: 46.85011 iterations/s (+1.95841 iterations/s / +4.36252 %)
               Worst performance: 38.85325 iterations/s (-6.03845 iterations/s / -13.45114 %)
              Median performance: 45.62880 iterations/s (1st quartile: 45.76807 | 3rd quartile: 45.26856)
[ RUN      ] Group1PredecessorFixture.PredecessorGroup1 (20 runs, 5 iterations per run)
[     DONE ] Group1PredecessorFixture.PredecessorGroup1 (986.771047 ms)
[   RUNS   ]        Average time: 49338.552 us (~362.394 us)
                    Fastest time: 49013.863 us (-324.689 us / -0.658 %)
                    Slowest time: 50345.322 us (+1006.770 us / +2.041 %)
                     Median time: 49211.514 us (1st quartile: 49104.273 us | 3rd quartile: 49383.837 us)

             Average performance: 20.26813 runs/s
                Best performance: 20.40239 runs/s (+0.13426 runs/s / +0.66244 %)
               Worst performance: 19.86282 runs/s (-0.40531 runs/s / -1.99973 %)
              Median performance: 20.32045 runs/s (1st quartile: 20.36483 | 3rd quartile: 20.24954)

[ITERATIONS]        Average time: 9867.710 us (~72.479 us)
                    Fastest time: 9802.773 us (-64.938 us / -0.658 %)
                    Slowest time: 10069.064 us (+201.354 us / +2.041 %)
                     Median time: 9842.303 us (1st quartile: 9820.855 us | 3rd quartile: 9876.767 us)

             Average performance: 101.34063 iterations/s
                Best performance: 102.01196 iterations/s (+0.67132 iterations/s / +0.66244 %)
               Worst performance: 99.31409 iterations/s (-2.02654 iterations/s / -1.99973 %)
              Median performance: 101.60224 iterations/s (1st quartile: 101.82413 | 3rd quartile: 101.24770)
[ RUN      ] Group2InsertionFixture.Group2 (20 runs, 5 iterations per run)
[     DONE ] Group2InsertionFixture.Group2 (836.328620 ms)
[   RUNS   ]        Average time: 27877.621 us (~342.328 us)
                    Fastest time: 27046.568 us (-831.053 us / -2.981 %)
                    Slowest time: 28927.217 us (+1049.596 us / +3.765 %)
                     Median time: 27837.332 us (1st quartile: 27779.463 us | 3rd quartile: 27997.472 us)

             Average performance: 35.87107 runs/s
                Best performance: 36.97327 runs/s (+1.10220 runs/s / +3.07267 %)
               Worst performance: 34.56952 runs/s (-1.30155 runs/s / -3.62840 %)
              Median performance: 35.92298 runs/s (1st quartile: 35.99782 | 3rd quartile: 35.71751)

[ITERATIONS]        Average time: 27877.621 us (~342.328 us)
                    Fastest time: 27046.568 us (-831.053 us / -2.981 %)
                    Slowest time: 28927.217 us (+1049.596 us / +3.765 %)
                     Median time: 27837.332 us (1st quartile: 27779.463 us | 3rd quartile: 27997.472 us)

             Average performance: 35.87107 iterations/s
                Best performance: 36.97327 iterations/s (+1.10220 iterations/s / +3.07267 %)
               Worst performance: 34.56952 iterations/s (-1.30155 iterations/s / -3.62840 %)
              Median performance: 35.92298 iterations/s (1st quartile: 35.99782 | 3rd quartile: 35.71751)
[ RUN      ] Group2PredecessorFixture.PredecessorGroup2 (20 runs, 5 iterations per run)
[     DONE ] Group2PredecessorFixture.PredecessorGroup2 (917.470125 ms)
[   RUNS   ]        Average time: 45873.506 us (~326.517 us)
                    Fastest time: 45567.716 us (-305.790 us / -0.667 %)
                    Slowest time: 46963.936 us (+1090.430 us / +2.377 %)
                     Median time: 45809.290 us (1st quartile: 45685.698 us | 3rd quartile: 45896.013 us)

             Average performance: 21.79907 runs/s
                Best performance: 21.94536 runs/s (+0.14629 runs/s / +0.67107 %)
               Worst performance: 21.29293 runs/s (-0.50614 runs/s / -2.32184 %)
              Median performance: 21.82963 runs/s (1st quartile: 21.88869 | 3rd quartile: 21.78838)

[ITERATIONS]        Average time: 9174.701 us (~65.303 us)
                    Fastest time: 9113.543 us (-61.158 us / -0.667 %)
                    Slowest time: 9392.787 us (+218.086 us / +2.377 %)
                     Median time: 9161.858 us (1st quartile: 9137.140 us | 3rd quartile: 9179.203 us)

             Average performance: 108.99537 iterations/s
                Best performance: 109.72681 iterations/s (+0.73143 iterations/s / +0.67107 %)
               Worst performance: 106.46467 iterations/s (-2.53070 iterations/s / -2.32184 %)
              Median performance: 109.14817 iterations/s (1st quartile: 109.44344 | 3rd quartile: 108.94192)
[ RUN      ] WarpInsertionFixture.Warp (20 runs, 5 iterations per run)
[     DONE ] WarpInsertionFixture.Warp (605.668914 ms)
[   RUNS   ]        Average time: 20188.964 us (~186.747 us)
                    Fastest time: 20057.774 us (-131.190 us / -0.650 %)
                    Slowest time: 21091.714 us (+902.750 us / +4.472 %)
                     Median time: 20147.381 us (1st quartile: 20104.902 us | 3rd quartile: 20186.976 us)

             Average performance: 49.53201 runs/s
                Best performance: 49.85598 runs/s (+0.32397 runs/s / +0.65406 %)
               Worst performance: 47.41198 runs/s (-2.12003 runs/s / -4.28012 %)
              Median performance: 49.63424 runs/s (1st quartile: 49.73911 | 3rd quartile: 49.53689)

[ITERATIONS]        Average time: 20188.964 us (~186.747 us)
                    Fastest time: 20057.774 us (-131.190 us / -0.650 %)
                    Slowest time: 21091.714 us (+902.750 us / +4.472 %)
                     Median time: 20147.381 us (1st quartile: 20104.902 us | 3rd quartile: 20186.976 us)

             Average performance: 49.53201 iterations/s
                Best performance: 49.85598 iterations/s (+0.32397 iterations/s / +0.65406 %)
               Worst performance: 47.41198 iterations/s (-2.12003 iterations/s / -4.28012 %)
              Median performance: 49.63424 iterations/s (1st quartile: 49.73911 | 3rd quartile: 49.53689)
[ RUN      ] WarpGetThreadFixture.GetThreadWarp (20 runs, 5 iterations per run)
[     DONE ] WarpGetThreadFixture.GetThreadWarp (31.867510 ms)
[   RUNS   ]        Average time: 1593.376 us (~87.837 us)
                    Fastest time: 1444.600 us (-148.776 us / -9.337 %)
                    Slowest time: 1812.330 us (+218.954 us / +13.742 %)
                     Median time: 1595.925 us (1st quartile: 1555.849 us | 3rd quartile: 1637.282 us)

             Average performance: 627.59845 runs/s
                Best performance: 692.23314 runs/s (+64.63469 runs/s / +10.29873 %)
               Worst performance: 551.77589 runs/s (-75.82256 runs/s / -12.08138 %)
              Median performance: 626.59606 runs/s (1st quartile: 642.73590 | 3rd quartile: 610.76833)

[ITERATIONS]        Average time: 318.675 us (~17.567 us)
                    Fastest time: 288.920 us (-29.755 us / -9.337 %)
                    Slowest time: 362.466 us (+43.791 us / +13.742 %)
                     Median time: 319.185 us (1st quartile: 311.170 us | 3rd quartile: 327.456 us)

             Average performance: 3137.99227 iterations/s
                Best performance: 3461.16572 iterations/s (+323.17345 iterations/s / +10.29873 %)
               Worst performance: 2758.87945 iterations/s (-379.11282 iterations/s / -12.08138 %)
              Median performance: 3132.98029 iterations/s (1st quartile: 3213.67948 | 3rd quartile: 3053.84167)
[ RUN      ] WarpGetWarpFixture.GetWarpWarp (20 runs, 5 iterations per run)
[     DONE ] WarpGetWarpFixture.GetWarpWarp (98.953395 ms)
[   RUNS   ]        Average time: 4947.670 us (~119.702 us)
                    Fastest time: 4800.658 us (-147.012 us / -2.971 %)
                    Slowest time: 5213.272 us (+265.602 us / +5.368 %)
                     Median time: 4939.318 us (1st quartile: 4837.848 us | 3rd quartile: 5069.322 us)

             Average performance: 202.11535 runs/s
                Best performance: 208.30478 runs/s (+6.18943 runs/s / +3.06232 %)
               Worst performance: 191.81811 runs/s (-10.29724 runs/s / -5.09473 %)
              Median performance: 202.45710 runs/s (1st quartile: 206.70348 | 3rd quartile: 197.26504)

[ITERATIONS]        Average time: 989.534 us (~23.940 us)
                    Fastest time: 960.132 us (-29.402 us / -2.971 %)
                    Slowest time: 1042.654 us (+53.120 us / +5.368 %)
                     Median time: 987.864 us (1st quartile: 967.570 us | 3rd quartile: 1013.864 us)

             Average performance: 1010.57675 iterations/s
                Best performance: 1041.52389 iterations/s (+30.94714 iterations/s / +3.06232 %)
               Worst performance: 959.09057 iterations/s (-51.48618 iterations/s / -5.09473 %)
              Median performance: 1012.28550 iterations/s (1st quartile: 1033.51738 | 3rd quartile: 986.32519)
[ RUN      ] WarpPredecessorFixture.PredecessorWarp (20 runs, 5 iterations per run)
[     DONE ] WarpPredecessorFixture.PredecessorWarp (1065.612110 ms)
[   RUNS   ]        Average time: 53280.605 us (~397.077 us)
                    Fastest time: 52688.599 us (-592.006 us / -1.111 %)
                    Slowest time: 54265.959 us (+985.354 us / +1.849 %)
                     Median time: 53197.233 us (1st quartile: 53041.581 us | 3rd quartile: 53356.091 us)

             Average performance: 18.76856 runs/s
                Best performance: 18.97944 runs/s (+0.21088 runs/s / +1.12360 %)
               Worst performance: 18.42776 runs/s (-0.34080 runs/s / -1.81579 %)
              Median performance: 18.79797 runs/s (1st quartile: 18.85313 | 3rd quartile: 18.74200)

[ITERATIONS]        Average time: 10656.121 us (~79.415 us)
                    Fastest time: 10537.720 us (-118.401 us / -1.111 %)
                    Slowest time: 10853.192 us (+197.071 us / +1.849 %)
                     Median time: 10639.447 us (1st quartile: 10608.316 us | 3rd quartile: 10671.218 us)

             Average performance: 93.84278 iterations/s
                Best performance: 94.89719 iterations/s (+1.05441 iterations/s / +1.12360 %)
               Worst performance: 92.13879 iterations/s (-1.70398 iterations/s / -1.81579 %)
              Median performance: 93.98985 iterations/s (1st quartile: 94.26567 | 3rd quartile: 93.71001)
[==========] Ran 21 benchmarks.